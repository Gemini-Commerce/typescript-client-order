/**
 * order Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * Contact: info@gemini-commerce.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CreateOrderRequestInitialPayment } from '../models/CreateOrderRequestInitialPayment';
import { OrderCurrency } from '../models/OrderCurrency';
import { OrderDataCustomerInfo } from '../models/OrderDataCustomerInfo';
import { OrderDataPaymentInfo } from '../models/OrderDataPaymentInfo';
import { OrderDataPromotionInfo } from '../models/OrderDataPromotionInfo';
import { OrderDataShipmentInfo } from '../models/OrderDataShipmentInfo';
import { OrderDataSubtotal } from '../models/OrderDataSubtotal';
import { OrderDataTotal } from '../models/OrderDataTotal';
import { OrderOrderDataItem } from '../models/OrderOrderDataItem';
import { OrderPostalAddress } from '../models/OrderPostalAddress';
import { HttpFile } from '../http/http';

export class OrderCreateOrderRequest {
    'tenantId': string;
    'number': string;
    'channel'?: string;
    'market': string;
    'locale': string;
    'items': Array<OrderOrderDataItem>;
    'paymentsInfo'?: Array<OrderDataPaymentInfo>;
    'shipmentsInfo'?: Array<OrderDataShipmentInfo>;
    'promotions'?: Array<OrderDataPromotionInfo>;
    'payments'?: Array<CreateOrderRequestInitialPayment>;
    'currency': OrderCurrency;
    'subtotals': { [key: string]: OrderDataSubtotal; };
    'totals': { [key: string]: OrderDataTotal; };
    'vatIncluded': boolean;
    'billingAddress': OrderPostalAddress;
    'shippingAddress': OrderPostalAddress;
    'customerInfo': OrderDataCustomerInfo;
    'cartGrn'?: string;
    'onHold'?: boolean;
    'notes'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "tenantId",
            "baseName": "tenantId",
            "type": "string",
            "format": ""
        },
        {
            "name": "number",
            "baseName": "number",
            "type": "string",
            "format": ""
        },
        {
            "name": "channel",
            "baseName": "channel",
            "type": "string",
            "format": ""
        },
        {
            "name": "market",
            "baseName": "market",
            "type": "string",
            "format": ""
        },
        {
            "name": "locale",
            "baseName": "locale",
            "type": "string",
            "format": ""
        },
        {
            "name": "items",
            "baseName": "items",
            "type": "Array<OrderOrderDataItem>",
            "format": ""
        },
        {
            "name": "paymentsInfo",
            "baseName": "paymentsInfo",
            "type": "Array<OrderDataPaymentInfo>",
            "format": ""
        },
        {
            "name": "shipmentsInfo",
            "baseName": "shipmentsInfo",
            "type": "Array<OrderDataShipmentInfo>",
            "format": ""
        },
        {
            "name": "promotions",
            "baseName": "promotions",
            "type": "Array<OrderDataPromotionInfo>",
            "format": ""
        },
        {
            "name": "payments",
            "baseName": "payments",
            "type": "Array<CreateOrderRequestInitialPayment>",
            "format": ""
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "OrderCurrency",
            "format": ""
        },
        {
            "name": "subtotals",
            "baseName": "subtotals",
            "type": "{ [key: string]: OrderDataSubtotal; }",
            "format": ""
        },
        {
            "name": "totals",
            "baseName": "totals",
            "type": "{ [key: string]: OrderDataTotal; }",
            "format": ""
        },
        {
            "name": "vatIncluded",
            "baseName": "vatIncluded",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "billingAddress",
            "baseName": "billingAddress",
            "type": "OrderPostalAddress",
            "format": ""
        },
        {
            "name": "shippingAddress",
            "baseName": "shippingAddress",
            "type": "OrderPostalAddress",
            "format": ""
        },
        {
            "name": "customerInfo",
            "baseName": "customerInfo",
            "type": "OrderDataCustomerInfo",
            "format": ""
        },
        {
            "name": "cartGrn",
            "baseName": "cartGrn",
            "type": "string",
            "format": ""
        },
        {
            "name": "onHold",
            "baseName": "onHold",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "notes",
            "baseName": "notes",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return OrderCreateOrderRequest.attributeTypeMap;
    }

    public constructor() {
    }
}



